import React from "react";
import {
    Button,
    Grid,
    TextField,
    Typography,
} from "@material-ui/core";
import { red } from "@material-ui/core/colors";
import TokenInput from "react-customize-token-input";
import PropTypes from "prop-types";

import { helpers } from "../../../common_helpers/helpers";

export default function CreateMalwareAnalysisPatternElements(props){
    let { 
        isDisabled,
        campaignPatterElement,
        handlerAuthors,
        handlerOpinion, 
        handlerExplanation,
    } = props;

    return (<React.Fragment>

    </React.Fragment>);
}

CreateMalwareAnalysisPatternElements.propTypes = {
    isDisabled: PropTypes.bool.isRequired,
    campaignPatterElement: PropTypes.object.isRequired,
    handlerAuthors: PropTypes.func.isRequired,
    handlerOpinion: PropTypes.func.isRequired, 
    handlerExplanation: PropTypes.func.isRequired,
};

/**
//MalwareAnalysisDomainObjectsSTIX объект "Malware Analysis", по терминалогии STIX, содержит анализ вредоносных программ захватывающих метаданные
//  и результаты конкретного статического или динамического анализа, выполненного на экземпляре вредоносного ПО или семействе вредоносных программ
// Product - название аналитического ПО использованного для обработки и анализа вредоносного ПО (ОБЯЗАТЕЛЬНОЕ ЗНАЧЕНИЕ)
// Version - версия аналитического ПО
// HostVMRef - идентификатор на описание виртуального окружения использованного для анализа вредоносного ПО
// OperatingSystemRef - идентификатор на описание ОС используемой для динамического анализа вредоносного ПО
// InstalledSoftwareRefs - список идентификаторов ссылающихся на описание любого нестандартного ПО установленного в ОС используемой для динамического
//  анализа вредоносного ПО
// ConfigurationVersion - именованная конфигурация дополнительных параметров конфигурации продукта, используемого для анализа
// Modules - конкретные модули анализа, которые были использованы и сконфигурированы в продукте во время выполнения анализа
// AnalysisEngineVersion - версия аналитического движка или продукта (включая AV-движки), который был использован для выполнения анализа
// AnalysisDefinitionVersion - версия определений анализа, используемых инструментом анализа (включая AV-инструменты)
// Submitted - время, в формате "2016-05-12T08:17:27.000Z", когда вредоносное ПО было впервые отправлено на сканирование или анализ
// AnalysisStarted - время, в формате "2016-05-12T08:17:27.000Z", начала анализа вредоносного ПО
// AnalysisEnded - время, в формате "2016-05-12T08:17:27.000Z", когда был завершен анализ вредоносного ПО
// ResultName - результат классификации или имя, присвоенное экземпляру вредоносного ПО инструментом анализа (сканером)
// Result - один, из заранее определенного (предложенного) перечня результатов классификации, определяется аналитическим инструментом или сканером
// AnalysisScoRefs - список идентификаторов на другие наблюдаемые Domain Objects STIX которые были захвачены в процессе наблюдения
// SampleRef - содержит ссылку на файл, сетевой трафик или объект на основе которого был выполнен анализ вредоносного ПО
// AvResult - результат аналитической обработки (ЭТО ПОЛЕ ЕСТЬ ТОЛЬКО В ПРИМЕРЕ, в описании типа данного поля нет)
type MalwareAnalysisDomainObjectsSTIX struct {
	CommonPropertiesObjectSTIX
	CommonPropertiesDomainObjectSTIX
	Product                   string               `json:"product" bson:"product" required:"true"`
	Version                   string               `json:"version" bson:"version"`
	HostVMRef                 IdentifierTypeSTIX   `json:"host_vm_ref" bson:"host_vm_ref"`
	OperatingSystemRef        IdentifierTypeSTIX   `json:"operating_system_ref" bson:"operating_system_ref"`
	InstalledSoftwareRefs     []IdentifierTypeSTIX `json:"installed_software_refs" bson:"installed_software_refs"`
	ConfigurationVersion      string               `json:"configuration_version" bson:"configuration_version"`
	Modules                   []string             `json:"modules" bson:"modules"`
	AnalysisEngineVersion     string               `json:"analysis_engine_version" bson:"analysis_engine_version"`
	AnalysisDefinitionVersion string               `json:"analysis_definition_version" bson:"analysis_definition_version"`
	Submitted                 time.Time            `json:"submitted" bson:"submitted"`
	AnalysisStarted           time.Time            `json:"analysis_started" bson:"analysis_started"`
	AnalysisEnded             time.Time            `json:"analysis_ended" bson:"analysis_ended"`
	ResultName                string               `json:"result_name" bson:"result_name"`
	Result                    OpenVocabTypeSTIX    `json:"result" bson:"result"`
	AnalysisScoRefs           []IdentifierTypeSTIX `json:"analysis_sco_refs" bson:"analysis_sco_refs"`
	SampleRef                 IdentifierTypeSTIX   `json:"sample_ref" bson:"sample_ref"`
	AvResult                  OpenVocabTypeSTIX    `json:"av_result" bson:"av_result"`
}
 */